{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/users.ts","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","TodoList","memo","todos","map","id","users","username","data","userId","find","item","App","useState","selectedUser","setSelectedUser","setTitle","todosList","setTodosList","titleError","setTitleError","selectedUserError","setSelectedUserError","useEffect","action","method","onSubmit","event","preventDefault","trim","Math","max","newTodo","type","placeholder","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4453da2.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../tipes';\n\ntype Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user?.email}>\n      { user?.name }\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../tipes';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      className={className('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { FC, memo } from 'react';\nimport { Todo } from '../../tipes';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: FC<Props> = memo(({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <TodoInfo key={todo.id} todo={todo} />\n        );\n      })}\n    </section>\n  );\n});\n","import './App.scss';\nimport {\n  FC, useState, useEffect, ChangeEvent,\n} from 'react';\nimport { User, Todo } from './tipes';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst users: User[] = usersFromServer.map(({ id, name, email }) => {\n  return { id, name, email };\n});\n\nconst data: Todo[] = todosFromServer.map((todo) => {\n  const {\n    id, title, completed, userId,\n  } = todo;\n\n  const user: User | undefined = users.find(item => item.id === userId);\n\n  return {\n    id, title, completed, user,\n  };\n});\n\nexport const App: FC = () => {\n  const [selectedUser, setSelectedUser] = useState<string>('');\n  const [title, setTitle] = useState<string>('');\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [selectedUserError, setSelectedUserError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTodosList([...data]);\n  }, []);\n\n  const handleInput = (event : ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (value.trim()) {\n      setTitleError(false);\n    }\n\n    setTitle(value);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    if (value.trim()) {\n      setSelectedUserError(false);\n    }\n\n    setSelectedUser(value);\n  };\n\n  const handleSubmit = (event : ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setSelectedUserError(true);\n    }\n\n    if (!selectedUser || !title) {\n      return;\n    }\n\n    const id = Math.max(...todosList.map(todo => todo.id)) + 1;\n    const user: User | undefined = (\n      users.find(item => item.name === selectedUser)\n    );\n\n    const newTodo: Todo = {\n      id,\n      title,\n      completed: false,\n      user,\n    };\n\n    setTodosList([\n      ...todosList,\n      newTodo,\n    ]);\n\n    setSelectedUser('');\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n\n          {\n            titleError\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            placeholder=\"Choose a user\"\n            data-cy=\"selectedUser\"\n            value={selectedUser || 0}\n            onChange={handleSelect}\n          >\n            <option\n              value=\"0\"\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n            {users.map(({ id, name }) => (\n              <option key={id} value={name}>{name}</option>\n            ))}\n          </select>\n\n          {\n            selectedUserError\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}